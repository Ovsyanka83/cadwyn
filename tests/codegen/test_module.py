import inspect
import re
from types import ModuleType

import pytest

from cadwyn.exceptions import CadwynStructureError
from cadwyn.structure import module
from tests.conftest import (
    CreateLocalVersionedPackages,
    HeadModuleFor,
    version_change,
)


@pytest.fixture()
def empty_latest(head_module_for: HeadModuleFor):
    return head_module_for("")


def test__module_had_import(
    create_local_versioned_packages: CreateLocalVersionedPackages,
    empty_latest: ModuleType,
):
    v1, v2, v3 = create_local_versioned_packages(
        version_change(module(empty_latest).had(import_="import cadwyn")),
        version_change(module(empty_latest).had(import_="from cadwyn import Cadwyn")),
    )

    assert inspect.getsource(v1) == (
        "# THIS FILE WAS AUTO-GENERATED BY CADWYN. DO NOT EVER TRY TO EDIT IT BY HAND\n\n"
        "from cadwyn import Cadwyn\n"
        "import cadwyn\n"
    )
    assert inspect.getsource(v2) == (
        "# THIS FILE WAS AUTO-GENERATED BY CADWYN. DO NOT EVER TRY TO EDIT IT BY HAND\n\nfrom cadwyn import Cadwyn\n"
    )
    assert inspect.getsource(v3) == ("# THIS FILE WAS AUTO-GENERATED BY CADWYN. DO NOT EVER TRY TO EDIT IT BY HAND\n\n")


def test__module_had_import__specified_more_than_one_import__should_raise_error(
    empty_latest: ModuleType,
):
    # with insert_pytest_raises():
    with pytest.raises(
        CadwynStructureError,
        match=re.escape(
            "You have specified more than just a single import. "
            "This is prohibited. Problematic string: import cadwyn\nimport ast",
        ),
    ):
        module(empty_latest).had(import_="import cadwyn\nimport ast")


def test__module_had_import__specified_non_import__should_raise_error(
    empty_latest: ModuleType,
):
    with pytest.raises(
        CadwynStructureError,
        match=re.escape("You have specified a non-import statement. This is prohibited. Problematic string: a = 83"),
    ):
        module(empty_latest).had(import_="a = 83")


def test__module_had_import__specified_import_and_non_import__should_raise_error(
    empty_latest: ModuleType,
):
    with pytest.raises(
        CadwynStructureError,
        match=re.escape(
            "You have specified more than just a single import. "
            "This is prohibited. Problematic string: import cadwyn\na = 83",
        ),
    ):
        module(empty_latest).had(import_="import cadwyn\na = 83")
